{% extends 'backpack/layout.html.twig' %}
{% import '@AdminLTE/Macros/buttons.html.twig'  as btn %}
{% import "macros/delele.html.twig" as del %}
{% import "macros/submit.html.twig" as sub %}
{% import "macros/save.html.twig" as save %}
{% import "macros/workflow.html.twig" as wfl %}
{% import "macros/link.html.twig" as link %}
{% import "macros/file.html.twig" as file %}

{% block page_subtitle %}
	<small class="muted text-xs">Modification</small>
{% endblock %}
{% block page_title %}{% endblock %}


{% block breadcrumb %}
	{% import "backpack/_btn_actions.html.twig" as actions %}
	{{ actions.backpack(

        'edit',
        item.stateCurrent,
        item.owner==app.user,
        item,
        null
    ) }}
{% endblock %}


{% block page_content %}


	<div class="row justify-content-center">
		<div class="col-lg-12 col-xl-8">
			<div class="bg-white rounded border-light p-4">
				{{ include(domaine ~ '/_show/_identification.html.twig') }}

				{% if item.stateCurrent in ["draft","toResume","toCheck"] %}
					{% set nbrL=item.backpackLinks | length %}
					{% set nbrF=item.backpackFiles | length %}

					<div class="card card-p-dark card-tabs">
						<div class="card-header p-0 pt-1">
							<ul class="nav nav-tabs" id="custom-tabs-one-tab" role="tablist">
								<li class="nav-item">
									<a class="nav-link active" id="custom-tabs-one-home-tab" data-toggle="pill" href="#custom-tabs-one-home" role="tab" aria-controls="custom-tabs-one-home" aria-selected="true">
										Général
									</a>
								</li>

								<li class="nav-item">
									<a class="nav-link" id="custom-tabs-one-file-tab" data-toggle="pill" href="#custom-tabs-one-file" role="tab" aria-controls="custom-tabs-one-file" aria-selected="false">
										Pièce jointe (<strong>{{ nbrL + nbrF}}</strong>)
									</a>
								</li>


							</ul>
						</div>

						<!-- /.card -->
					</div>


					<div class="tab-content " id="custom-tabs-one-tabContent">

						<div class="tab-pane fade active show " id="custom-tabs-one-home" role="tabpanel" aria-labelledby="custom-tabs-one-home-tab">
							{{ form_start(form) }}
							{{ form_errors(form) }}
							{% if item is defined %}
								{{ include(domaine ~ '/_edit/_reference.html.twig') }}
								{{ include(domaine ~ '/_edit/_type_doc.html.twig') }}
								{{ include(domaine ~ '/_edit/_process.html.twig') }}
								{{ include(domaine ~ '/_edit/_arborescence.html.twig') }}
								{{ include(domaine ~ '/_edit/_name.html.twig') }}
								{{ save.btn()}}
							{% endif %}
						</div>
						<div class="d-none">
							{{form_rest(form)}}
							{{ sub.btn() }}
						</div>

						{{ form_end(form) }}

						<div class="tab-pane fade" id="custom-tabs-one-file" role="tabpanel" aria-labelledby="custom-tabs-one-file-tab">
							{% if item.stateCurrent  in ["draft","toResume"] %}
								{{ link.twig('backpacklink') }}
								{{ file.twig('backpackfile') }}
							{% endif %}
						</div>
					</div>
				{% elseif item.stateCurrent in ["abandonned","toValidate","toControl","published","toRevise"] %}
					{{ include(domaine ~ '/_show/_process.html.twig') }}
					{{ include(domaine ~ '/_show/_arborescence.html.twig') }}
					{{ include(domaine ~ '/_show/_content.html.twig') }}
					{{ include(domaine ~ '/_show/_files.html.twig') }}
				{% endif %}
			</div>

		</div>
		<div class="col-lg-12 col-xl-4 ">
			<h4 class="text-p-dark  p-2 rounded">Etat du porte-document</h4>
			<hr/>

			{{ wfl.cards(item) }}
		</div>
	</div>


	{% for transition in workflow_transitions(item,item.category.workflowName) %}
		{{ include('workflow/_modal_transition.html.twig',{'transition':transition.name,'id':item.id}) }}
	{% endfor %}


	{% if item.id is not null %}
		{{ del.delete_form(route_del,item.id, 'show') }}
	{% endif %}
	<p class="mt-5 mb-5">&nbsp;</p>
	<p class="mt-5 mb-5">&nbsp;</p>
	<p class="mt-5 mb-5">&nbsp;</p>
	<p class="mt-5 mb-5">&nbsp;</p>
	<p class="mt-5 mb-5">&nbsp;</p>
	<p class="mt-5 mb-5">&nbsp;</p>

</div>
<div class="modal fade" id="addDir" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Ajoute un libellé</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form>
					<div class="form-group">
						<label for="addDir_field_new" class="col-form-label">Libellé</label>
						<input type="text" class="form-control d-none" id="addDir_field">
						<input type="text" class="form-control" id="addDir_field_new">
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
				<button type="button" id="btn_addDir" class="btn btn-success">Ajouter le libellé</button>
			</div>
		</div>
	</div>
</div></div>{% endblock %}{%  block javascripts %}{{ parent() }}<script src="{{ absolute_url( asset('/vendor/axios/dist/axios.min.js')) }}"></script><script src="{{ absolute_url( asset('/vendor/jquery-form/dist/jquery.form.min.js')) }}"></script><script src="{{ absolute_url( asset('js/es_backpack_file.js')) }}"></script><script src="{{ absolute_url( asset('/js/es_widget.js')) }}"></script><script src="{{ absolute_url( asset('/js/es_category.js')) }}"></script><script src="{{ absolute_url( asset('/js/es_combomp.js')) }}"></script><script src="{{ absolute_url( asset('/js/es_arborescence.js')) }}"></script>{{ link.script('backpacklink', item) }}{{ file.script('backpackfile', item) }}<script type="text/javascript">


function getBackpackRef(id) {
var url = '/ajax/backpack/getref/' + id;
let ref = $('#backpack_ref');


axios.get(url).then(function (response) {
setVal(ref, response.data.value);

}).catch(function (error) {
console.log(error);
});
}

function getBackpackRefCheck(id) {

let ref = $('#backpack_ref');
let result = $('#refcheck');

$.ajax({
method: "POST",
url: "{{ path('ajax_backpack_getg_ref_check') }}",

data: {
'id': id,
'ref': getVal(ref)
},


dataType: 'json',
success: function (json) {
html(result, json.value);


}
});
}


$(document).on('change', '.custom-file-input', function () {
let fileName = $(this).val().replace(/\\/g, '/').replace(/.*\//, '');
$(this).parent('.custom-file').find('.custom-file-label').text(fileName);
});
// nécessaire pour l'update es images

$('#backpack_updatedAt_date_month').val(new Date().getMonth() + 1);
$('#backpack_updatedAt_date_day').val(new Date().getDate());
$('#backpack_updatedAt_date_year').val(new Date().getFullYear());
$('#backpack_updatedAt_time_hour').val(new Date().getHours());
$('#backpack_updatedAt_time_minute').val(new Date().getMinutes());


let idMp = {{ item.mProcess is null ?0:item.mProcess.id }};
let idP = {{ item.process is null ?0:item.process.id }};

/*##################################
		####################################
		####        Niveaux         ########
		####################################
		##################################*/


let cmb1 = $('#cmb_dir1');
let cmb2 = $('#cmb_dir2');
let cmb3 = $('#cmb_dir3');
let cmb4 = $('#cmb_dir4');
let cmb5 = $('#cmb_dir5');

let formcmb1 = $('#backpack_dir1');
let formcmb2 = $('#backpack_dir2');
let formcmb3 = $('#backpack_dir3');
let formcmb4 = $('#backpack_dir4');
let formcmb5 = $('#backpack_dir5');

let div1 = $('#div_dir1');
let div2 = $('#div_dir2');
let div3 = $('#div_dir3');
let div4 = $('#div_dir4');
let div5 = $('#div_dir5');

let route1 ="{{ path('ajax_fill_combobox_dir1') }}";
let route2 ="{{ path('ajax_fill_combobox_dir2') }}";
let route3 ="{{ path('ajax_fill_combobox_dir3') }}";
let route4 ="{{ path('ajax_fill_combobox_dir4') }}";
let route5 ="{{ path('ajax_fill_combobox_dir5') }}";


arborescence(cmb1, route1, idMp, idP, true, formcmb1);


cmb1.change(function () {
var data = $('#cmb_dir1  option:selected').text();
setVal(formcmb1, data);
if (data === "") {
hide(div2);
hide(div3);
hide(div4);
hide(div5);
} else {
show(div2);
arborescenceChained(cmb2, route2, idMp, idP, data, true, formcmb2);
}
});


cmb2.change(function () {
var data = $('#cmb_dir2  option:selected').text();
setVal(formcmb2, data);

if (data === "") {
hide(div3);
hide(div4);
hide(div5);
} else {
show(div3);
arborescenceChained(cmb3, route3, idMp, idP, data, true, formcmb3);

}
});

cmb3.change(function () {
var data = $('#cmb_dir3  option:selected').text();
setVal(formcmb3, data);

if (data === "") {
hide(div4);
hide(div5);
} else {
show(div4);
arborescenceChained(cmb4, route4, idMp, idP, data, true, formcmb4);

}
});

cmb4.change(function () {
var data = $('#cmb_dir4  option:selected').text();
setVal(formcmb4, data);
if (data === "") {
hide(div5);
} else {
show(div5);
arborescenceChained(cmb5, route5, idMp, idP, data, true, formcmb5);

}
});

cmb5.change(function () {
var data = $('#cmb_dir5  option:selected').text();
setVal(formcmb5, data);
});


$('#addDir').on('show.bs.modal', function (event) {
var button = $(event.relatedTarget)
var recipient = button.data('whatever')
var modal = $(this)

modal.find('#addDir_field').val(recipient)
});


$(function () {
$('#btn_addDir').click(function () {

if ($('#addDir_field_new').val() === "") {
alert('Le libellé est vide');
return;
}
$('#addDir').modal('toggle');
var selecteurCible = $('#addDir_field').val();
var data = $('#addDir_field_new').val();
$('#' + selecteurCible).append('<option selected value="' + data + '">' + data + '</option>');
$('#addDir_field').val("");
$('#' + selecteurCible).change();

});
});

/*##################################
		####################################
		####        MP / P          ########
		####################################
		##################################*/

let mp_less = $('#cmb_mp');
let mp_radio = $('#mp_radio');
let mp = $('#backpack_mProcess');


let p_less = $('#cmb_p');
let p_radio = $('#p_radio');
let p = $('#backpack_process');


let route_mp = "{{ path('ajax_cmb_mp_for_contribute') }}";
let route_p = "{{ path('ajax_cmb_p_for_contribute') }}";


fillComboboxMP(mp_less, route_mp, idMp);
fillComboboxMP(p_less, route_p, idP);


required(mp_less);
disabled(p_less);


mp_less.change(function () {
setVal(mp, getVal(mp_less));
});


p_less.change(function () {
setVal(p, getVal(p_less));
});


mp_radio.on('ifChecked', function () {
required(mp_less);
undisabled(mp_less);
disabled(p_less);
setVal(p_less, 0);
setVal(p, 0);
});


p_radio.on('ifChecked', function () {
unrequired(mp_less);
disabled(mp_less);
undisabled(p_less);
setVal(mp_less, 0);
setVal(mp, 0);
});


// si le process est présent on coche la case Process
if (idP != 0) {
p_radio.iCheck('check');
mp_radio.iCheck('uncheck');
}</script>{% endblock %}
